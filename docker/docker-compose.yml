version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:15
    container_name: fantastic_router_db
    environment:
      POSTGRES_DB: property_mgmt
      POSTGRES_USER: fantastic_user
      POSTGRES_PASSWORD: fantastic_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fantastic_user -d property_mgmt"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Fantastic Router Application
  app:
    build: 
      context: ..
      dockerfile: docker/Dockerfile
    container_name: fantastic_router_app
    environment:
      - PYTHONPATH=/app
      # Environment variables for YAML config substitution
      - DATABASE_URL=postgresql://fantastic_user:fantastic_pass@postgres:5432/property_mgmt
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your-openai-api-key-here}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-3.5-turbo-1106}
      - LLM_MAX_TOKENS=${LLM_MAX_TOKENS:-1000}
      - GEMINI_API_KEY=${GEMINI_API_KEY:-your-google-ai-api-key-here}
      - GEMINI_MODEL=${GEMINI_MODEL:-gemini-1.5-flash}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-your-anthropic-api-key-here}
      - ANTHROPIC_MODEL=${ANTHROPIC_MODEL:-claude-3-haiku-20240307}
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL:-http://localhost:11434}
      - OLLAMA_MODEL=${OLLAMA_MODEL:-llama3.1:8b}
      - DB_MAX_CONNECTIONS=${DB_MAX_CONNECTIONS:-10}
      - DB_TIMEOUT=${DB_TIMEOUT:-30}
      - APP_ENV=${APP_ENV:-development}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - USE_FAST_PLANNER=${USE_FAST_PLANNER:-true}
      - LLM_TIMEOUT=${LLM_TIMEOUT:-60}
      - LLM_TEMPERATURE=${LLM_TEMPERATURE:-0.1}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ../examples:/app/examples
      - ../packages:/app/packages
      - ../adapters:/app/adapters
      - ../configs:/app/configs
    # Default command now runs FastAPI server (from Dockerfile)
    # Override for testing: command: python examples/quickstart/example.py

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: fantastic_router_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@fantastic-router.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - postgres
    profiles:
      - admin

volumes:
  postgres_data: 